name: Deploy Jekyll with Gemfile Fallback

on:
  push:
    branches:
      - main
  workflow_dispatch:

# ── 여기서 GITHUB_TOKEN 권한을 반드시 write로 설정 ──────────────────
permissions:
  contents: write    # 리포지토리 파일 푸시 권한
  pages: write       # Pages API 권한 (optional for configure-pages)
  id-token: write    # OIDC (peaceiris 액션엔 필요 없음)

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for Gemfile
        id: gemfile_check
        run: |
          if [ -f Gemfile ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create default Gemfile if missing
        if: steps.gemfile_check.outputs.exists == 'false'
        run: |
          cat << 'EOF' > Gemfile
          source 'https://rubygems.org'
          gem 'jekyll', '~> 4.3'
          EOF

      - name: Setup Ruby & Bundler
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Install dependencies
        run: bundle install --jobs 4 --retry 3

      - name: Build site with Jekyll
        run: bundle exec jekyll build --destination _site

      - name: Deploy to gh-pages branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          # 1) 기본적으로는 GITHUB_TOKEN 사용
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: _site
          user_name: github-actions
          user_email: github-actions@github.com

          # 2) 만약 위에서 계속 403 에러 발생 시, 
          #    개인 액세스 토큰을 GH_PAGES_PAT라는 시크릿에 저장하고 아래처럼 교체하세요.
          # github_token: ${{ secrets.GH_PAGES_PAT }}
