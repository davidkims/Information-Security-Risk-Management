name: SpringBoot Setup & Maven Install

on:
  workflow_dispatch:

jobs:
  setup-springboot:
    runs-on: ubuntu-latest

    steps:
      # 1. GitHub 저장소 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 디스크 슬롯 디렉토리 생성
      - name: Create disk slot structure
        run: |
          mkdir -p ~/springboot-slots/slot1/bin
          mkdir -p ~/springboot-slots/slot1/config
          mkdir -p ~/springboot-slots/slot1/logs
          echo "✅ 디스크 슬롯 디렉토리 생성 완료"

      # 3. Maven 최신 버전 수동 설치
      - name: Install Maven (v3.9.6)
        run: |
          MAVEN_VERSION=3.9.6
          curl -sL https://downloads.apache.org/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.zip -o maven.zip
          unzip -q maven.zip -d ~/springboot-slots/slot1/bin
          echo "MAVEN_HOME=$HOME/springboot-slots/slot1/bin/apache-maven-${MAVEN_VERSION}" >> $GITHUB_ENV
          echo "PATH=$HOME/springboot-slots/slot1/bin/apache-maven-${MAVEN_VERSION}/bin:$PATH" >> $GITHUB_ENV
          echo "✅ Maven ${MAVEN_VERSION} 설치 완료"

      # 4. Maven 버전 확인
      - name: Verify Maven version
        run: mvn -v

      # 5. Spring Boot 프로젝트 빌드
      - name: Build Spring Boot app
        run: |
          cd .  # pom.xml이 루트에 있을 경우
          mvn clean package -DskipTests
          cp target/*.jar ~/springboot-slots/slot1/bin/app.jar
          echo "✅ JAR 파일 빌드 및 슬롯 보관 완료"

      # 6. 설정 파일 복사
      - name: Store configuration files
        run: |
          cp -r src/main/resources/* ~/springboot-slots/slot1/config/
          echo "✅ 설정 파일 복사 완료"

      # 7. 백그라운드로 Spring Boot JAR 실행
      - name: Run Spring Boot app (background)
        run: |
          nohup java -jar ~/springboot-slots/slot1/bin/app.jar > ~/springboot-slots/slot1/logs/server.log 2>&1 &
          echo "✅ Spring Boot 서버 실행 중"

      # 8. 슬롯 구조 확인
      - name: Show disk slot layout
        run: |
          sudo apt-get install -y tree > /dev/null
          tree ~/springboot-slots/slot1 || find ~/springboot-slots/slot1
